FORMAT: 1A
# Vitasnella - Tu al meglio
Documentazione API Tu al meglio 2017

#Group Codici fardello
## GET /loyalty/codes
Elenco dei codici fardello caricati dall'utente
+ Request (application/json)
    + Headers
        Authorization: Bearer <token>
+ Response 200 (application/json)
    + Attributes
        - data (Codes)

## POST /loyalty/codes
Caricamento di un codice fardello
+ Request (application/json)
    + Headers
        Authorization: Bearer <token>
    + Attributes
        - code: `MGHIG56` (string, required)
+ Response 200 (application/json)
    + Attributes
        - data (Codes)
+ Response 422 (application/json)
    + Attributes
        - data (ValidationError)


#Group Premi
## GET /loyalty/awards
Elenco dei premi disponibili
+ Request (application/json)
    + Headers
        Authorization: Bearer <token>
    + Attributes
        - threshold: `6` (string)
        - score: `6` (number)
+ Response 200 (application/json)
    + Attributes
        - data (array[Awards, Awards])


## GET /loyalty/awards/{id}
Dettaglio di un singolo premio
+ Request (application/json)
    + Headers
        Authorization: Bearer <token>
+ Parameters
    + id: `2` - Id del premio.
+ Response 200 (application/json)
    + Attributes
        - data (Awards)

## GET /loyalty/awards/request/{id}
Richiesta premio
+ Request (application/json)
    + Headers
        Authorization: Bearer <token>
+ Parameters
    + id: `2` - Id premio
+ Response 200 (application/json)
    + Attributes
        - data (Awards Request)
+ Response 422 (application/json)
  + Attributes
      - data (ValidationError)

#Group Soglie
## GET /loyalty/thresholds
Elenco delle soglie premio programma loyalty
+ Request (application/json)
    + Headers
        Authorization: Bearer <token>
+ Response 200 (application/json)
  + Attributes
    - data (array[Threshold, Threshold])

#Group Utente
## POST /users/register
Registrazione nuovo utente
+ Request (application/json)
    + Attributes (User Create)
+ Response 201 (application/json)
    + Attributes
        - data (User)
+ Response 422 (application/json)
    + Attributes
        - data (ValidationError)

## GET /users/{id}
Dettaglio utente
+ Request (application/json)
    + Headers
        Authorization: Bearer <token>
+ Parameters
    + id: `2` - Id
+ Response 200 (application/json)
    + Attributes
        - data (User)
+ Response 422 (application/json)
    + Attributes
        - data (ValidationError)

## GET /users/login
Login utente
+ Request (application/json)
    + Attributes (User Login)
+ Response 200 (application/json)
    + Attributes
        - data (User Token)
+ Response 422 (application/json)
    + Attributes
        - data (ValidationError)

## PUT /users/{id}
Modifica i dati dell'utente
+ Request (application/json)
    + Headers
        Authorization: Bearer <token>
    + Attributes (User)
+ Parameters
    + id: `2` - ID
+ Response 200 (application/json)
    + Attributes
        - data (User)
+ Response 422 (application/json)
    + Attributes
        - data (ValidationError)

#Group Contenuti utente
## GET /users/me
Dettaglio utente loggato
+ Request (application/json)
    + Headers
        Authorization: Bearer <token>
+ Response 200 (application/json)
    + Attributes
        - data (User)
+ Response 422 (application/json)
    + Attributes
        - data (ValidationError)

## GET /users/me/week
Contenuti della settimana per l'utente
+ Request (application/json)
    + Headers
        Authorization: Bearer <token>
+ Response 200 (application/json)
    + Attributes
        - data (User Week)
+ Response 422 (application/json)
    + Attributes
        - data (ValidationError)

## GET /users/me/week-survey
Questionario settimanale per l'utente
+ Request (application/json)
    + Headers
        Authorization: Bearer <token>
+ Response 200 (application/json)
    + Attributes
        - data (User Week Survey)
+ Response 422 (application/json)
    + Attributes
        - data (ValidationError)

#Group Wellness

## GET /wellness/survey-profile
Elenco domande e risposte del questionario di profilazione utente
+ Request (application/json)
    + Headers
        Authorization: Bearer <token>
+ Response 200 (application/json)
    + Attributes
        - data (Status App)
+ Response 422 (application/json)
    + Attributes
        - data (ValidationError)

#Group Json Statici
## GET /status
Dettaglio json relativo allo status
+ Request (application/json)
    + Headers
        Authorization: Bearer <token>
+ Response 200 (application/json)
    + Attributes
        - data (json)
+ Response 404 (application/json)
    + Attributes
        - data (FileNotFoundError)

## GET /app-contents/{name}
Dettaglio json relativo al parametro passato come input
+ Request (application/json)
    + Headers
        Authorization: Bearer <token>
+ Parameters
    + name: `menu` - Nome del json che si vuole restituito
+ Response 200 (application/json)
    + Attributes
        - data (json)
+ Response 404 (application/json)
    + Attributes
        - data (FileNotFoundError)

# Data Structures
## Base Item Id
- id: `1` (number)

## Base Item Title
- title: `sample title` (string, required)

## Base Item Content
- title: `sample content lorem ipsum dolor sit amet` (string, required)

## Base Item Image
- image: `http://placehold.it/400x400` (string)

## Codes (object)
- count: `20` (number, required) - Totale dei codici fardello caricati.

## Awards (object)
- id: `1` (number)
- title: `nome premio` (string)
- image: `http://placehold.it/600x600` (string)
- content: `lorem ipsum dolor sit amet lorem ipsum dolor sit amet` (string)
- excerpt: `lorem ipsum dolor` (string)
- threshold: `6` (string)
- score: `3` (number)
- partner: `nome partner` (string)
- additional_money: `20.00` (number)

## Awards full (object)
- Include Awards

## Awards Request (object)
- status: `success` (string)
- guid: `mhgd67` (string)

## ValidationError (object)
- status: `error` (string)
- error_code: `ERRCODE` (string)
- message: `error message string` (string)

## FileNotFoundError (object)
- status: `error` (string)
- error_code: `ERRCODE` (string)
- message: `error message string` (string)

## Threshold
- id: `1` (number)
- title: `nome soglia` (string)
- content: `lorem ipsum dolor sit amet lorem ipsum dolor sit amet` (string)

## UserBase
- first_name: `Maria` (string, required)
- last_name: `Rossi` (string, required)
- birthday: (array[Date Array], required)
- gender: `F` (string, required)
- phone: `3274595785` (string)
- address: `via Roma 120` (string, required)
- zip_code: `10100` (string, required)
- city: `Torino` (string, required)
- state: `TO` (string, required)
- email: `maria.rossi@test.com` (string, required)

## User Create (object)
- Include UserBase
- email_confirm: `maria.rossi@test.com` (string, required)
- password: `password` (string, required)
- password_confirm: `password` (string, required)
- terms: (array[User Terms], required)

## User (object)
- id: `1` (number)
- Include UserBase
- birthday_date: `1984-29-07` (string)
- terms: (array[User Terms], required)

## Date Array
- year: `1984` (number)
- month: `07` (number)
- day: `29` (number)

## User Terms
- 1: '0' (number)
- 2: `1` (number)
- 3: `1` (number)
- 4: `0` (number)

## User Login
- email: `maria.rossi@test.com` (string, required)
- password: `password` (string, required)

## User Token
- token: `eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzY290Y2guaW8iLCJleHAiOjEzMDA4MTkzODAsIm5hbWUiOiJDaHJpcyBTZXZpbGxlamEiLCJhZG1pbiI6dHJ1ZX0.03f329983b86f7d9a9f5fef85305880101d5e302afafa20154d094b229f75773` (string)

## User Week
- week_number: `1` (number)
- fitness: (array[Content Fitness])
- food: (array[Content Food])
- motivational : (Base Content)
- lifestyle : (Base Content)

# Base Content
- title: `Lorem ipsum` (string)
- content: `Lorem ipsum dolor sit amet` (string)
- image: `http://placehold.it/600x600` (string)

# Content Fitness
- Include Base Content
- excercises: (array[Content Exercise, Content Exercise])

# Content Food
- Include Base Content
- recipes: (array[Content Recipe, Content Recipe])

# Content Exercise
- title: `Lorem ipsum` (string)
- content: `Lorem ipsum dolor sit amet` (string)
- video_id: `mghe76x` (string)

# Content Recipe
- Include Base Content

# Survey Question
- Include Base Item Id
- Include Base Item Content

# Survey Answer
- Include Base Item Id
- Include Base Item Content

# Survey Item
- question : (Survey Question)
- answers : (array[Survey Answer,Survey Answer,Survey Answer])

# User Week Survey
- week_number: `1` (number)
- Include Survey Item

# Profile Survey
- (array[Survey Item, Survey Item, Survey Item, Survey Item, Survey Item, Survey Item])
